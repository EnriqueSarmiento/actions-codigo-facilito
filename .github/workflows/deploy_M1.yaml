name: Deploy to server

on: push

jobs:
  first_job:
    runs-on: ubuntu-latest
    ## se pueden declarar variables de entorno.
    env:
      NAME: CodigoFacilito

    steps:
      - name: Hola mundo
        ## imprimiendo la variable de entorno name.
        run: echo "Hola mundo desde GithuActions $NAME"

      - name: working dir
        ## aqui las carpetas salen vacias
        run: ls -al

      - name: Action
        ## se usas la directiva uses para especificar que se usara ya un action definido, en este caso usaremos una de github actions. pero hay un marketplace
        uses: actions/checkout@v4
        ## la directiva with nos permite pasarle parametros a el action que estemes usando. coo php version, version python, etc. Depende de cada action documentacion.
        # with:
        #   hola: 12

      - name: working dir despues del action
        ## aqui ya salen carpetas
        run: ls -al

      - name: Compartir info entre jobs
        ## HAY UNA VARIABLE DE ENTORNO DE GITHUB ACTIONS
        run: echo $GITHUB_OUTPUT

      - name: Concatenar un valor a una variable de entorno
        id: step_6
        run: echo "my_variable=Hola mundo" >> $GITHUB_OUTPUT

      - name: imprimir la variable
        ## aqui ya tiene otro valoe
        run: echo $GITHUB_OUTPUT

      - name: Referencia de un step para obtener el valor de su output
        ## aqui obtenemos el output del step_6, es importante que el step tenga un id para mantener concistencia en al informacion.
        run: echo ${{ steps.step_6.outputs.my_variable }}

  second_job:
    ## contextos - nos sirven para tener informacion del workflow en todos los aspectos
    ## condicionales para determinar si un job se corre o no, solo se puede agregar un if por job.
    ## en este caso tenemos u condicional que emplea el contexto, donde solo se corre este segundo job solo si se esta trabajando en la rama main.
    if: ${{ github.ref == 'refs/heads/main' }}
    ## este job necesita el primer job, se usa la directiva de needs donde le valor es el number del otro job.
    needs: first_job
    runs-on: ubuntu-latest

    steps:
      - name: Segundo Hola mundo
        ## Tambien se pueden condicionar los steps
        ## if: false
        run: echo "Hola Mundo de nuevo, usando directiva para necesitar el primer job ${{ github.ref }}"
